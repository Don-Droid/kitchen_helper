#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Mar 11, 2021 12:45:11 PM EST  platform: Windows NT

import sys
import mysql.connector
import time

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global message
    message = tk.StringVar()
    message.set('')
    global sday
    sday = tk.StringVar()
    sday.set('sday')
    global smonth
    smonth = tk.StringVar()
    smonth.set('smonth')
    global syear
    syear = tk.StringVar()
    syear.set('syear')
    global eday
    eday = tk.StringVar()
    eday.set('eday')
    global emonth
    emonth = tk.StringVar()
    emonth.set('emonth')
    global eyear
    eyear = tk.StringVar()
    eyear.set('eyear')

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def show():
    global sdate
    sdate = sday.get()+"-"+smonth.get()+"-"+syear.get()
    global edate
    edate = eday.get()+"-"+emonth.get()+"-"+eyear.get()
    message.set('Your food expense for the period ' + sdate + ' to ' + edate + ' is $' + str(dbmanager()))
    sys.stdout.flush()

def dbmanager():
    mydb = mysql.connector.connect(host="localhost", user="root", password="pA$$123", database="khelperdb")
    mycursor = mydb.cursor()

    mycursor.execute("select date, price from pantry")
    myresult = mycursor.fetchall()
    expense = 0
    for row in myresult:
        
        idate = time.strptime(row[0], "%d-%m-%Y")
        start = time.strptime(sdate, "%d-%m-%Y")
        end = time.strptime(edate, "%d-%m-%Y")
        #print (idate)
        if (idate >= start) and (idate <= end):
            expense += row[1]
            
    return (expense)

def back():
    destroy_window()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import expense
    expense.vp_start_gui()
